#!/bin/bash

# Script environment:
#   JAVA_HOME: the defined Java runtime
#   JAVA_OPTS: JVM options.
#       Es: export JAVA_OPTS="-Xmx6G -Xms1G -server"
#   rdfpro.cmd.sort: native command to process sorting.
#       Es: rdfpro.cmd.sort="sort -S 8192M --batch-size=64 --compress-program=lz4 -T $SW_HOME/tmp"
#   rdfpro.cmd.gzip: native command to process gzipped streams.
#       Es: rdfpro.cmd.gzip="pigz -p 4 -b 4096"
#   rdfpro.cmd.bzip2: native command to process bzip2 streams.
#       Es: rdfpro.cmd.bzip2="pbzip2"
#   RDFPRO_GROOVY_CLASSPATH: the classpath for Groovy scripts

# resolve program name in case it is a symbolic link
PRG="$0"
while [ -h "$PRG" ]; do
  ls=`ls -ld "$PRG"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    PRG="$link"
  else
    PRG=`dirname "$PRG"`/"$link"
  fi
done
BINDIR=`dirname "$PRG"`
BASEDIR=`cd "$BINDIR" >/dev/null; pwd`


# Retrieve the path of the java executable.
_JAVA="java"
if [ -n "$JAVA_HOME"  ] ; then
        if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
                _JAVA="$JAVA_HOME/jre/sh/java"
    elif [ -x "$JAVA_HOME/bin/java" ] ; then
                _JAVA="$JAVA_HOME/bin/java"
        fi
fi

# Build classpath.
_LIB=$BASEDIR/lib
_CLASSPATH=$BASEDIR/etc
for _JAR in `ls $_LIB/*.jar` ; do
        _CLASSPATH=$_CLASSPATH:$_JAR;
done

# Build groovy classpath.
OLD_CLASSPATH=$RDFPRO_GROOVY_CLASSPATH
RDFPRO_GROOVY_CLASSPATH=$BASEDIR/groovy
if [ -n "$OLD_CLASSPATH" ] ; then
    export RDFPRO_GROOVY_CLASSPATH=$RDFPRO_GROOVY_CLASSPATH:$OLD_CLASSPATH
fi

# Execute the program
$_JAVA $JAVA_OPTS -classpath $_CLASSPATH eu.fbk.rdfpro.tool.Main "$@"
